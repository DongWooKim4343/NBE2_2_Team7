# 워크플로우의 이름 지정
name: CI/CD

# 워크플로가 시작될 조건 지정
on:
  push:
    branches: [ main ]

jobs:
  build:
    # 실행 환경 지정
    runs-on: ubuntu-latest

    # 실행 스텝 지정
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle (Skip Tests)
        run: ./gradlew clean build -x test

      - name: Create application.properties
        run: |
          touch ./src/main/resources/application.properties
          echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties

      - name: Upload application.properties
        uses: actions/upload-artifact@v3
        with:
          name: application.properties
          path: ./src/main/resources/application.properties

      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      # 배포용 패키지 경로 저장
      - name: Set artifact
        run: |
          echo "ARTIFACT_NAME=$(ls ./build/libs/*.jar | grep -v plain | head -n 1)" >> $GITHUB_ENV
        shell: bash

      # 디버깅을 위한 파일 확인
      - name: List build directory
        run: ls -la ./build/libs/

      # 빈스토크 배포
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACTION_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_ACTION_SECRET_ACCESS_KEY }}
          application_name: dev-prac
          environment_name: Dev-prac-env
          version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
          region: ap-northeast-2
#          deployment_package: ./build/libs/${{ env.artifact }}
          deployment_package: ./build/libs/hunmin-0.0.1-SNAPSHOT.jar    # 직접 JAR 파일 경로 지정